name: Deploy AWS Infrastructure (CDK)

on:
  push:
    branches: [main, develop]
    paths:
      - 'sre-agent-aws/**'
      - '.github/workflows/deploy-aws-cdk.yml'
  pull_request:
    branches: [main]
    paths:
      - 'sre-agent-aws/**'
  workflow_dispatch:
    inputs:
      environment:
        description: Environment to deploy to
        required: true
        default: staging
        type: choice
        options: [staging, production]
      force_deploy:
        description: Force deployment even if no changes
        required: false
        default: false
        type: boolean

env:
  AWS_REGION: us-east-1
  PYTHON_VERSION: '3.9'
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Install CDK
        run: npm install -g aws-cdk
      - name: Install Python deps
        working-directory: sre-agent-aws
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: CDK synth
        working-directory: sre-agent-aws
        run: cdk synth

  deploy-staging:
    needs: validate
    runs-on: ubuntu-latest
    if: >-
      github.ref == 'refs/heads/develop' ||
      (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'staging')
    environment: staging
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install CDK
        run: npm install -g aws-cdk
      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Bootstrap
        working-directory: sre-agent-aws
        run: cdk bootstrap aws://${{ secrets.AWS_ACCOUNT_ID }}/${{ env.AWS_REGION }} || true
      - name: Deploy
        working-directory: sre-agent-aws
        run: cdk deploy --require-approval never --context environment=staging

  deploy-production:
    needs: validate
    runs-on: ubuntu-latest
    if: >-
      github.ref == 'refs/heads/main' ||
      (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production')
    environment: production
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install CDK
        run: npm install -g aws-cdk
      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Bootstrap
        working-directory: sre-agent-aws
        run: cdk bootstrap aws://${{ secrets.AWS_ACCOUNT_ID }}/${{ env.AWS_REGION }} || true
      - name: Deploy
        working-directory: sre-agent-aws
        run: cdk deploy --require-approval never --context environment=production

  notify:
    needs: [deploy-staging, deploy-production]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Create summary
        run: |
          echo "## Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "- Staging: ${{ needs.deploy-staging.result || 'skipped' }}" >> $GITHUB_STEP_SUMMARY
          echo "- Production: ${{ needs.deploy-production.result || 'skipped' }}" >> $GITHUB_STEP_SUMMARY
          echo "- Overall Status: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
